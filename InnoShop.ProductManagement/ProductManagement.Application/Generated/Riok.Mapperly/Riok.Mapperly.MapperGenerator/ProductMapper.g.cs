// <auto-generated />
#nullable enable
namespace ProductManagement.Application.Mappers
{
    public static partial class ProductMapper
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public static partial global::InnoShop.CommonLibrary.CommonDTOs.ProductDTO? ProductToProductDTO(global::ProductManagement.Domain.Data.Models.Product? product)
        {
            if (product == null)
                return default;
            var target = new global::InnoShop.CommonLibrary.CommonDTOs.ProductDTO();
            target.Id = product.Id;
            target.Title = product.Title;
            target.Price = product.Price;
            target.CreateDate = product.CreateDate;
            target.Description = product.Description;
            target.UserId = product.UserId;
            target.ProductStatusId = product.ProductStatusId;
            if (product.ProductStatus != null)
            {
                target.ProductStatus ??= new global::InnoShop.CommonLibrary.CommonDTOs.ParameterDTO();
                target.ProductStatus.Id = product.ProductStatus.Id;
                target.ProductStatus.Text = product.ProductStatus.Title;
            }
            target.SubCategoryId = product.SubCategoryId;
            if (product.SubCategory != null)
            {
                target.SubCategory ??= new global::InnoShop.CommonLibrary.CommonDTOs.ParameterDTO();
                target.SubCategory.Id = product.SubCategory.Id;
                target.SubCategory.Text = product.SubCategory.Title;
            }
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        public static partial global::ProductManagement.Domain.Data.Models.Product? ProductDTOToProduct(global::InnoShop.CommonLibrary.CommonDTOs.ProductDTO? productDTO)
        {
            if (productDTO == null)
                return default;
            var target = new global::ProductManagement.Domain.Data.Models.Product();
            if (productDTO.Id != null)
            {
                target.Id = productDTO.Id.Value;
            }
            target.Title = productDTO.Title;
            target.Price = productDTO.Price;
            target.CreateDate = productDTO.CreateDate;
            target.Description = productDTO.Description;
            target.UserId = productDTO.UserId;
            target.ProductStatusId = productDTO.ProductStatusId;
            if (productDTO.ProductStatus != null)
            {
                target.ProductStatus = MapToProductStatus(productDTO.ProductStatus);
            }
            else
            {
                target.ProductStatus = null;
            }
            target.SubCategoryId = productDTO.SubCategoryId;
            if (productDTO.SubCategory != null)
            {
                target.SubCategory = MapToSubCategory(productDTO.SubCategory);
            }
            else
            {
                target.SubCategory = null;
            }
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        private static global::ProductManagement.Domain.Data.Models.ProductStatus MapToProductStatus(global::InnoShop.CommonLibrary.CommonDTOs.ParameterDTO source)
        {
            var target = new global::ProductManagement.Domain.Data.Models.ProductStatus();
            target.Id = source.Id;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.1.1.0")]
        private static global::ProductManagement.Domain.Data.Models.SubCategory MapToSubCategory(global::InnoShop.CommonLibrary.CommonDTOs.ParameterDTO source)
        {
            var target = new global::ProductManagement.Domain.Data.Models.SubCategory();
            target.Id = source.Id;
            return target;
        }
    }
}